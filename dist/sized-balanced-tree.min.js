!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("SBT",[],e):"object"==typeof exports?exports.SBT=e():t.SBT=e()}("undefined"!=typeof self?self:this,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=3)}([function(t,e,r){"use strict";const i=t=>{if(!t)return 0;const e=i(t.left),r=i(t.right);return Math.max(e,r)+1};e.size=t=>t&&t.size||0,e.height=i,e.printFn=t=>t.key},function(t,e,r){"use strict";const{size:i}=r(0),n=(t,e=0)=>{if(t)return e===i(t.left)+1?t:e<=i(t.left)?n(t.left,e):n(t.right,e-1-i(t.left))};e.select=n,e.selectFirst=t=>{if(t){for(;t.left;)t=t.left;return t}},e.selectLast=t=>{if(t){for(;t.right;)t=t.right;return t}}},function(t,e,r){"use strict";const{size:i}=r(0),{rotateLeft:n,rotateRight:o}=r(9),s=(t,e=!1)=>{if(t){if(e)if(t.right&&i(t.right.right)>i(t.left))t=n(t);else{if(!(t.right&&i(t.right.left)>i(t.left)))return t;t.right=o(t.right),t=n(t)}else if(t.left&&i(t.left.left)>i(t.right))t=o(t);else{if(!(t.left&&i(t.left.right)>i(t.right)))return t;t.left=n(t.left),t=o(t)}return t.left=s(t.left,!1),t.right=s(t.right,!0),t=s(t,!1),t=s(t,!0)}};e.maintain=s},function(t,e,r){t.exports=r(4)},function(t,e,r){"use strict";const{comparator:i}=r(5),{select:n,selectFirst:o,selectLast:s}=r(1),{find:f,contains:l}=r(6),{add:u}=r(7),{remove:c}=r(10),{traverse:a}=r(11),{size:h,height:g,printFn:d}=r(0);t.exports=class{constructor(t=i){this.comparator=t,this.name="Sized Balanced Tree",this.root=void 0}info(){return{name:this.name,version:"1.0.0",production:!0}}contains(t=null){return l(this.root,t,this.comparator)}select(t=0){const e=n(this.root,t);return e&&e.value}find(t=null){return f(this.root,t,this.comparator)}add(t=null,e){this.root=u(this.root,t,e,this.comparator)}remove(t=null){this.root=c(this.root,t,this.comparator)}getMin(){const t=o(this.root);return t&&t.value}getMax(){const t=s(this.root);return t&&t.value}getSize(){return h(this.root)}isBalanced(){const{left:t,right:e}=this.root,r=g(t),i=g(e);return Math.abs(r-i)<=2}traverse(t=d){let e=this.root,r=[];return a(e,"",!0,t=>r.push(t),t),r.join("")}}},function(t,e,r){"use strict";e.comparator=(t,e)=>t<e?-1:t>e?1:0},function(t,e,r){"use strict";const i=(t,e=null,r)=>{if(!r)throw new Error("comparator not defined");if(!t)return;let n=r(e,t.key);return n<0?i(t.left,e,r):n>0?i(t.right,e,r):t},n=(t,e=null,r)=>{if(!r)throw new Error("comparator not defined");if(!t)return!1;let i=r(e,t.key);return i<0?n(t.left,e,r):!(i>0)||n(t.right,e,r)};e.find=i,e.contains=n},function(t,e,r){"use strict";const i=r(8),{size:n}=r(0),{maintain:o}=r(2),s=(t,e=null,r,f)=>{if(!f)throw new Error("comparator not defined");if(!t)return new i({key:e,value:r});let l=f(e,t.key);return t.size=n(t)+1,l<0?t.left=s(t.left,e,r,f):t.right=s(t.right,e,r,f),t=o(t,e>=t.key)};e.add=s},function(t,e,r){"use strict";t.exports=class{constructor({key:t=null,value:e,left:r,right:i,size:n=1}){this.key=t,this.value=e,this.left=r,this.right=i,this.size=n}toString(){return`$. ${this.key} -> ${this.value}`}}},function(t,e,r){"use strict";const{size:i}=r(0);e.rotateLeft=t=>{if(!t)return;let e=t.right;return t.right=e.left,e.left=t,e.size=i(t),t.size=i(t.left)+i(t.right)+1,e},e.rotateRight=t=>{if(!t)return;let e=t.left;return t.left=e.right,e.right=t,e.size=i(t),t.size=i(t.left)+i(t.right)+1,e}},function(t,e,r){"use strict";const{size:i}=r(0),{maintain:n}=r(2),{selectFirst:o}=r(1),s=(t,e=null,r)=>{if(!r)throw new Error("comparator not defined");if(!t)return;let f=r(e,t.key);if(f<0)t.left=s(t.left,e,r);else if(f>0)t.right=s(t.right,e,r);else{if(!t.left)return t.right;if(!t.right)return t.left;{let e=o(t.right),i=t.key;t.key=e.key,t.value=e.value,e.key=i,t.right=s(t.right,i,r)}}return(t=n(t)).size=i(t.left)+i(t.right)+1,t};e.remove=s},function(t,e,r){"use strict";const i=(t,e,r,n,o)=>{if(t){n(`${e}${r?"└── ":"├── "}${o(t)}\n`);const s=e+(r?"    ":"│   ");t.left&&i(t.left,s,!1,n,o),t.right&&i(t.right,s,!0,n,o)}};e.traverse=i}])});